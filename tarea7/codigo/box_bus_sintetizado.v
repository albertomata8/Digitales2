/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* dynports =  1  *)
(* src = "box_word.v:1" *)
module \$paramod\box_word\BUS_SIZE=16\WORD_SIZE=4 (reset, clk, data_in, data_out, control);
  (* src = "box_word.v:12" *)
  wire _00_;
  (* src = "box_word.v:12" *)
  wire [3:0] _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  (* src = "box_word.v:3" *)
  input clk;
  (* src = "box_word.v:6" *)
  output control;
  (* src = "box_word.v:4" *)
  input [3:0] data_in;
  (* src = "box_word.v:5" *)
  output [3:0] data_out;
  (* src = "box_word.v:10" *)
  wire [31:0] i;
  (* src = "box_word.v:2" *)
  input reset;
  NOT _10_ (
    .A(_02_),
    .Y(_01_[0])
  );
  NAND _11_ (
    .A(reset),
    .B(data_in[1]),
    .Y(_03_)
  );
  NOT _12_ (
    .A(_03_),
    .Y(_01_[1])
  );
  NAND _13_ (
    .A(reset),
    .B(data_in[2]),
    .Y(_04_)
  );
  NOT _14_ (
    .A(_04_),
    .Y(_01_[2])
  );
  NAND _15_ (
    .A(reset),
    .B(data_in[3]),
    .Y(_05_)
  );
  NOT _16_ (
    .A(_05_),
    .Y(_01_[3])
  );
  NOR _17_ (
    .A(data_in[2]),
    .B(data_in[3]),
    .Y(_06_)
  );
  NOR _18_ (
    .A(data_in[0]),
    .B(data_in[1]),
    .Y(_07_)
  );
  NAND _19_ (
    .A(_06_),
    .B(_07_),
    .Y(_08_)
  );
  NAND _20_ (
    .A(reset),
    .B(_08_),
    .Y(_09_)
  );
  NOT _21_ (
    .A(_09_),
    .Y(_00_)
  );
  NAND _22_ (
    .A(data_in[0]),
    .B(reset),
    .Y(_02_)
  );
  (* src = "box_word.v:12" *)
  DFF _23_ (
    .C(clk),
    .D(_00_),
    .Q(control)
  );
  (* src = "box_word.v:12" *)
  DFF _24_ (
    .C(clk),
    .D(_01_[0]),
    .Q(data_out[0])
  );
  (* src = "box_word.v:12" *)
  DFF _25_ (
    .C(clk),
    .D(_01_[1]),
    .Q(data_out[1])
  );
  (* src = "box_word.v:12" *)
  DFF _26_ (
    .C(clk),
    .D(_01_[2]),
    .Q(data_out[2])
  );
  (* src = "box_word.v:12" *)
  DFF _27_ (
    .C(clk),
    .D(_01_[3]),
    .Q(data_out[3])
  );
  assign i = 32'd0;
endmodule

(* dynports =  1  *)
(* top =  1  *)
(* src = "box_bus_sintetizado.v:3" *)
module box_bus_sintetizado(reset, clk, data_in, data_out, control);
  (* src = "box_bus_sintetizado.v:5" *)
  input clk;
  (* src = "box_bus_sintetizado.v:8" *)
  output [3:0] control;
  (* src = "box_bus_sintetizado.v:6" *)
  input [15:0] data_in;
  (* src = "box_bus_sintetizado.v:7" *)
  output [15:0] data_out;
  (* src = "box_bus_sintetizado.v:4" *)
  input reset;
  (* src = "box_bus_sintetizado.v:16" *)
  \$paramod\box_word\BUS_SIZE=16\WORD_SIZE=4  \MEM[0].bloque  (
    .clk(clk),
    .control(control[3]),
    .data_in(data_in[3:0]),
    .data_out(data_out[15:12]),
    .reset(reset)
  );
  (* src = "box_bus_sintetizado.v:16" *)
  \$paramod\box_word\BUS_SIZE=16\WORD_SIZE=4  \MEM[1].bloque  (
    .clk(clk),
    .control(control[2]),
    .data_in(data_in[7:4]),
    .data_out(data_out[11:8]),
    .reset(reset)
  );
  (* src = "box_bus_sintetizado.v:16" *)
  \$paramod\box_word\BUS_SIZE=16\WORD_SIZE=4  \MEM[2].bloque  (
    .clk(clk),
    .control(control[1]),
    .data_in(data_in[11:8]),
    .data_out(data_out[7:4]),
    .reset(reset)
  );
  (* src = "box_bus_sintetizado.v:16" *)
  \$paramod\box_word\BUS_SIZE=16\WORD_SIZE=4  \MEM[3].bloque  (
    .clk(clk),
    .control(control[0]),
    .data_in(data_in[15:12]),
    .data_out(data_out[3:0]),
    .reset(reset)
  );
endmodule
