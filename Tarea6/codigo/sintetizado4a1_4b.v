/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* src = "mux2a1_2b_desc_conductual.v:1" *)
module sintetizado2a1_2b(clk, reset_L, selector, valid_in0, valid_in1, data_in02a1_2b, data_in12a1_2b, data_out_conductual2a1_2b, valid_data_out2a1_2b);
  (* src = "mux2a1_2b_desc_conductual.v:13" *)
  wire [1:0] _00_;
  (* src = "mux2a1_2b_desc_conductual.v:13" *)
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  (* src = "mux2a1_2b_desc_conductual.v:2" *)
  input clk;
  (* src = "mux2a1_2b_desc_conductual.v:7" *)
  input [1:0] data_in02a1_2b;
  (* src = "mux2a1_2b_desc_conductual.v:8" *)
  input [1:0] data_in12a1_2b;
  (* src = "mux2a1_2b_desc_conductual.v:9" *)
  output [1:0] data_out_conductual2a1_2b;
  (* src = "mux2a1_2b_desc_conductual.v:3" *)
  input reset_L;
  (* src = "mux2a1_2b_desc_conductual.v:4" *)
  input selector;
  (* src = "mux2a1_2b_desc_conductual.v:10" *)
  output valid_data_out2a1_2b;
  (* src = "mux2a1_2b_desc_conductual.v:5" *)
  input valid_in0;
  (* src = "mux2a1_2b_desc_conductual.v:6" *)
  input valid_in1;
  NAND _21_ (
    .A(selector),
    .B(valid_in1),
    .Y(_07_)
  );
  NAND _22_ (
    .A(_06_),
    .B(_07_),
    .Y(_01_)
  );
  NOR _23_ (
    .A(data_out_conductual2a1_2b[0]),
    .B(_01_),
    .Y(_08_)
  );
  NOR _24_ (
    .A(valid_in1),
    .B(valid_in0),
    .Y(_09_)
  );
  NAND _25_ (
    .A(_03_),
    .B(_05_),
    .Y(_10_)
  );
  NOR _26_ (
    .A(data_in12a1_2b[0]),
    .B(_07_),
    .Y(_11_)
  );
  NAND _27_ (
    .A(reset_L),
    .B(_10_),
    .Y(_12_)
  );
  NOR _28_ (
    .A(_11_),
    .B(_12_),
    .Y(_13_)
  );
  NOR _29_ (
    .A(_09_),
    .B(_13_),
    .Y(_14_)
  );
  NOR _30_ (
    .A(_08_),
    .B(_14_),
    .Y(_00_[0])
  );
  NOR _31_ (
    .A(data_out_conductual2a1_2b[1]),
    .B(_01_),
    .Y(_15_)
  );
  NAND _32_ (
    .A(_04_),
    .B(_05_),
    .Y(_16_)
  );
  NOR _33_ (
    .A(data_in12a1_2b[1]),
    .B(_07_),
    .Y(_17_)
  );
  NAND _34_ (
    .A(reset_L),
    .B(_16_),
    .Y(_18_)
  );
  NOR _35_ (
    .A(_17_),
    .B(_18_),
    .Y(_19_)
  );
  NOR _36_ (
    .A(_09_),
    .B(_19_),
    .Y(_20_)
  );
  NOR _37_ (
    .A(_15_),
    .B(_20_),
    .Y(_00_[1])
  );
  NOT _38_ (
    .A(valid_in0),
    .Y(_02_)
  );
  NOT _39_ (
    .A(data_in02a1_2b[0]),
    .Y(_03_)
  );
  NOT _40_ (
    .A(data_in02a1_2b[1]),
    .Y(_04_)
  );
  NOR _41_ (
    .A(selector),
    .B(_02_),
    .Y(_05_)
  );
  NOT _42_ (
    .A(_05_),
    .Y(_06_)
  );
  (* src = "mux2a1_2b_desc_conductual.v:13" *)
  DFF _43_ (
    .C(clk),
    .D(_00_[0]),
    .Q(data_out_conductual2a1_2b[0])
  );
  (* src = "mux2a1_2b_desc_conductual.v:13" *)
  DFF _44_ (
    .C(clk),
    .D(_00_[1]),
    .Q(data_out_conductual2a1_2b[1])
  );
  (* src = "mux2a1_2b_desc_conductual.v:13" *)
  DFF _45_ (
    .C(clk),
    .D(_01_),
    .Q(valid_data_out2a1_2b)
  );
endmodule

(* src = "mux2a1_4b_desc_conductual.v:2" *)
module sintetizado2a1_4b(clk, reset_L, selector, valid_in0, valid_in1, data_in02a1_4b, data_in12a1_4b, data_out_conductual2a1_4b, valid_data_out2a1_4b);
  (* src = "mux2a1_4b_desc_conductual.v:3" *)
  input clk;
  (* src = "mux2a1_4b_desc_conductual.v:8" *)
  input [3:0] data_in02a1_4b;
  (* src = "mux2a1_4b_desc_conductual.v:9" *)
  input [3:0] data_in12a1_4b;
  (* src = "mux2a1_4b_desc_conductual.v:10" *)
  output [3:0] data_out_conductual2a1_4b;
  (* src = "mux2a1_4b_desc_conductual.v:4" *)
  input reset_L;
  (* src = "mux2a1_4b_desc_conductual.v:5" *)
  input selector;
  (* src = "mux2a1_4b_desc_conductual.v:11" *)
  output valid_data_out2a1_4b;
  (* src = "mux2a1_4b_desc_conductual.v:6" *)
  input valid_in0;
  (* src = "mux2a1_4b_desc_conductual.v:7" *)
  input valid_in1;
  (* module_not_derived = 32'd1 *)
  (* src = "mux2a1_4b_desc_conductual.v:13" *)
  mux2a1_2b_desc_conductual mux2a1_2b_a (
    .clk(clk),
    .data_in02a1_2b(data_in02a1_4b[1:0]),
    .data_in12a1_2b(data_in12a1_4b[1:0]),
    .data_out_conductual2a1_2b(data_out_conductual2a1_4b[1:0]),
    .reset_L(reset_L),
    .selector(selector),
    .valid_data_out2a1_2b(valid_data_out2a1_4b),
    .valid_in0(valid_in0),
    .valid_in1(valid_in1)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "mux2a1_4b_desc_conductual.v:15" *)
  mux2a1_2b_desc_conductual mux2a1_2b_b (
    .clk(clk),
    .data_in02a1_2b(data_in02a1_4b[3:2]),
    .data_in12a1_2b(data_in12a1_4b[3:2]),
    .data_out_conductual2a1_2b(data_out_conductual2a1_4b[3:2]),
    .reset_L(reset_L),
    .selector(selector),
    .valid_data_out2a1_2b(valid_data_out2a1_4b),
    .valid_in0(valid_in0),
    .valid_in1(valid_in1)
  );
endmodule

(* top =  1  *)
(* src = "mux4a1_4b_desc_conductual.v:2" *)
module sintetizado4a1_4b(clk, reset_L, valid_in0, valid_in1, valid_in2, valid_in3, selector, data_in04a1_4b, data_in14a1_4b, data_in24a1_4b, data_in34a1_4b, data_out_conductual4a1_4b, valid_data_out4a1_4b);
  (* src = "mux4a1_4b_desc_conductual.v:3" *)
  input clk;
  (* src = "mux4a1_4b_desc_conductual.v:10" *)
  input [3:0] data_in04a1_4b;
  (* src = "mux4a1_4b_desc_conductual.v:11" *)
  input [3:0] data_in14a1_4b;
  (* src = "mux4a1_4b_desc_conductual.v:12" *)
  input [3:0] data_in24a1_4b;
  (* src = "mux4a1_4b_desc_conductual.v:13" *)
  input [3:0] data_in34a1_4b;
  (* src = "mux4a1_4b_desc_conductual.v:14" *)
  output [3:0] data_out_conductual4a1_4b;
  (* src = "mux4a1_4b_desc_conductual.v:17" *)
  wire [3:0] mux2a1_4b_atoc;
  (* src = "mux4a1_4b_desc_conductual.v:18" *)
  wire [3:0] mux2a1_4b_btoc;
  (* src = "mux4a1_4b_desc_conductual.v:4" *)
  input reset_L;
  (* src = "mux4a1_4b_desc_conductual.v:9" *)
  input [2:0] selector;
  (* src = "mux4a1_4b_desc_conductual.v:15" *)
  output valid_data_out4a1_4b;
  (* src = "mux4a1_4b_desc_conductual.v:5" *)
  input valid_in0;
  (* src = "mux4a1_4b_desc_conductual.v:6" *)
  input valid_in1;
  (* src = "mux4a1_4b_desc_conductual.v:7" *)
  input valid_in2;
  (* src = "mux4a1_4b_desc_conductual.v:8" *)
  input valid_in3;
  (* src = "mux4a1_4b_desc_conductual.v:19" *)
  wire valid_out_atoc;
  (* src = "mux4a1_4b_desc_conductual.v:20" *)
  wire valid_out_btoc;
  (* module_not_derived = 32'd1 *)
  (* src = "mux4a1_4b_desc_conductual.v:26" *)
  mux2a1_4b_desc_conductual mux2a1_2b_b (
    .clk(clk),
    .data_in02a1_4b(data_in24a1_4b),
    .data_in12a1_4b(data_in34a1_4b),
    .data_out_conductual2a1_4b(mux2a1_4b_btoc),
    .reset_L(reset_L),
    .selector(selector[1]),
    .valid_data_out2a1_4b(valid_out_btoc),
    .valid_in0(valid_in2),
    .valid_in1(valid_in3)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "mux4a1_4b_desc_conductual.v:28" *)
  mux2a1_4b_desc_conductual mux2a1_2b_c (
    .clk(clk),
    .data_in02a1_4b(mux2a1_4b_atoc),
    .data_in12a1_4b(mux2a1_4b_btoc),
    .data_out_conductual2a1_4b(data_out_conductual4a1_4b),
    .reset_L(reset_L),
    .selector(selector[2]),
    .valid_data_out2a1_4b(valid_data_out4a1_4b),
    .valid_in0(valid_out_atoc),
    .valid_in1(valid_out_btoc)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "mux4a1_4b_desc_conductual.v:24" *)
  mux2a1_4b_desc_conductual mux2a1_4b_a (
    .clk(clk),
    .data_in02a1_4b(data_in04a1_4b),
    .data_in12a1_4b(data_in14a1_4b),
    .data_out_conductual2a1_4b(mux2a1_4b_atoc),
    .reset_L(reset_L),
    .selector(selector[0]),
    .valid_data_out2a1_4b(valid_out_atoc),
    .valid_in0(valid_in0),
    .valid_in1(valid_in1)
  );
endmodule
